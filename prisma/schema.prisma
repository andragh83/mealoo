generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Messages {
  text           String
  author         String
  xata_updatedat DateTime         @default(now()) @db.Timestamptz(6)
  xata_id        String           @unique(map: "_pgroll_users_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int              @default(0)
  xata_createdat DateTime         @default(now()) @db.Timestamptz(6)
  aiReplyMessage AiReplyMessages?
}

model AiReplyMessages {
  text           String
  author         String
  messageId      String   @unique
  xata_updatedat DateTime @default(now()) @db.Timestamptz(6)
  xata_id        String   @unique(map: "_pgroll_ai_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int      @default(0)
  xata_createdat DateTime @default(now()) @db.Timestamptz(6)
  message        Messages @relation(fields: [messageId], references: [xata_id])
}

model MealPlan {
  name           String?
  xata_updatedat DateTime        @default(now()) @db.Timestamptz(6)
  xata_id        String          @unique(map: "_pgroll_meal_plan_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int             @default(0)
  xata_createdat DateTime        @default(now()) @db.Timestamptz(6)
  user           String?
  days           DaysOfTheWeek[]
}

model DaysOfTheWeek {
  name           String
  mealPlanId     String
  xata_updatedat DateTime   @default(now()) @db.Timestamptz(6)
  xata_id        String     @unique(map: "_pgroll_days_of_the_week_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int        @default(0)
  xata_createdat DateTime   @default(now()) @db.Timestamptz(6)
  meals          DayMeals[]
  mealPlan       MealPlan   @relation(fields: [mealPlanId], references: [xata_id])
}

model DayMeals {
  type           String
  dayId          String
  mealId         String
  xata_updatedat DateTime      @default(now()) @db.Timestamptz(6)
  xata_id        String        @unique(map: "_pgroll_day_meal_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int           @default(0)
  xata_createdat DateTime      @default(now()) @db.Timestamptz(6)
  day            DaysOfTheWeek @relation(fields: [dayId], references: [xata_id])
  meal           Meals         @relation(fields: [mealId], references: [xata_id])
}

model Meals {
  recipe_name    String
  cooking_time   Int
  prep_time      Int
  kcal           Int
  xata_updatedat DateTime   @default(now()) @db.Timestamptz(6)
  xata_id        String     @unique(map: "_pgroll_meal_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int        @default(0)
  xata_createdat DateTime   @default(now()) @db.Timestamptz(6)
  cost           Int
  dayMealss      DayMeals[]
}
